_val_1 = DYN_FUN_2(10,20);
FORMAT "_val_1=%", _val_1;

_val_2 = DYN_FUN_2();
FORMAT "_val_2=%", _val_2

SUB SUBR1 A,B,C					# SUBROUTINE
	LOCAL	D					# PROTECT VARS
	D=	10				# MODIFY LOCAL
	W=DYN_FUN_1("D",1)
	FORMAT	"SUBR1: %,%,%,%", A,B,C,D		# PRINT PARAMS
	FORMAT	"SUBR1: OK!"			# DONE
	RETURN					# PLAIN RETURN
	FORMAT	"S: RETURN DID NOT RETURN!"	# IT BETTER HAD!
END SUB						#

SUB SUBR2 X,Y,Z					# SUBROUTINE
	LOCAL	N					# PROTECT VARS
	N=	10				# MODIFY LOCAL
	#N = NEWFUN(N)
	FORMAT	"SUBR2: %,%,%,%", X,Y,Z,N		# PRINT PARAMS
	FORMAT	"SUBR2: OK!"			# DONE
	RETURN					# PLAIN RETURN
	FORMAT	"S: RETURN DID NOT RETURN!"	# IT BETTER HAD!
END SUB						#

SUB F	X,Y					# FUNCTION
	RETURN	X+Y				# USE VALUES
	FORMAT	"F: RETURN DID NOT RETURN!"	# IT BETTER HAD!
END SUB						#

X=	100					# SET THESE GLOBALS
Y=	200					# ...
Z=	300					# ...
N=	500					# ASSIGNMENT

SUBR1	10,20,30					# CALL SUBROUTINE
SUBR2	30,20,10					# CALL SUBROUTINE

FORMAT	"X,Y,Z,N: %,%,%,%", X,Y,Z,N		# CHECK RESTORED
FORMAT	"F(100,F(120,80)): %", F(100,F(120,80))	# CALL FUNCTION


V = (X+Y)/Y + (X-Z)/Z + X/Z
FORMAT  "(X+Y)/Y + (X-Z)/Z + X/Z = %", V

I=	0					#
WHILE	I<5					# SIMPLE WHILE
	FORMAT	"WHILE I:%",I			#
	I=I+1					#
END WHILE					#

SUB TESTLOOP					# LOCAL I LOOP
	LOCAL I					#
	FOR I=-1 TO 1				#
	FORMAT	"TESTLOOP FOR I:%",I			#
	END FOR					#
END SUB						#

FOR	I=0 TO 1				# LOOPS DON'T INTERFERE
	TESTLOOP				# TESTLOOP USES I
END FOR						#

FOR	I=0 TO 3				# NESTED LOOPS
FOR	J=10 TO 12				#
	FORMAT	"NESTED LOOP I=% J=%", I,J			#
END FOR						#
END FOR						#

SUB	TESTESCAPE				#
	FOR	I=0 TO 10			# LEAVES 10 ON THE STACK
		RETURN				# POP "FOR" MAX
	END FOR					# NORMALY POPPED AFTER HERE
END SUB				 		#
TESTESCAPE					# CRASH IF TEMPS NOT HANDLED

IF	0					# FAILED CLAUSE
	FORMAT	"NO"				#
ELSE IF 1<2					# SUCCESSFUL CLAUSE
	FORMAT	"YES!"				# EXECUTE AND SKIP ELSE
ELSE						#
	FORMAT "WTF"				#
END IF						#

IF	1 THEN FORMAT "IN-LINE OK"		# IN-LINE IF
IF	0 THEN FORMAT "IN-LINE BAD"		# IN-LINE IF

STR="TEXT_STRING" 
FORMAT "$", STR

FORMAT "%%1=%, %%2=%", 10, 20

DIM	AA(10)					# ALLOCATE FOR A
FOR	I=1 TO UBOUND(AA)			# INITIALISE
	AA(I)=	I*10				#
END FOR						#

DIM	BB(10)					# ALLOCATE FOR B
FOR	I=1 TO UBOUND(BB)			# INITIALISE
	BB(I)=	I*100				#
END FOR						#

FOR	I=1 TO UBOUND(AA)			# INITIALISE
	FORMAT	"AA(%)=%", I, AA(I)	# PRINT
	FORMAT	"BB(%)=%", I, BB(I)	# PRINT
END FOR						#

#DIM	C(10000)

#A(20) = 0

#FORMAT "1/0 = %", 1 / 0 
#FORMAT "FMOD(5.3,0) = %", 5.3 % 0 
#FORMAT "FMOD(5.3,2) = %", 5.3 % 2 
#FORMAT "%", 32767*12

PRINTS "PRINTS"

EXPORT
EXPORT "*"
EXPORT "VAR_NAME1", V
EXPORT "VAR_NAME2", F(100,200), F(100,F(120,80))

FORMAT "NEWFUN(%)=%", 10, NEWFUN(10)


SUB STACKOVERFLOW X
	FORMAT "STACKOVERFLOW %", X
	STACKOVERFLOW X+1
END SUB
#STACKOVERFLOW 1

FORMAT ""
FORMAT "TEST MATH LIBRARY:"
X=0.78539815
FORMAT "SQRT(%) = %",X,SQRT(X)
FORMAT "SQ(%)   = %",X,SQ(X)
FORMAT "EXP(%)  = %",X,EXP(X)
FORMAT "LOG(%)  = %",X,LOG(X)
FORMAT "LOG2(%) = %",X,LOG2(X)
FORMAT "SIN(%)  = %",X,SIN(X)
FORMAT "COS(%)  = %",X,COS(X)
FORMAT "TAN(%)  = %",X,TAN(X)
FORMAT "ASIN(%) = %",X,ASIN(X)
FORMAT "ACOS(%) = %",X,ACOS(X)
FORMAT "ATAN(%) = %",X,ATAN(X)
FORMAT "ATAN2(%)= %",X,ATAN2(X,X)

X=3.1415926/4

FORMAT ""
FOR	I=-8 TO 8				
	FORMAT "ANGLE_WRAP_PI(%) = %", X*I, ANGLE_WRAP_PI(X*I)
END FOR						

FORMAT ""
FOR	I=-8 TO 8				
	FORMAT "ANGLE_WRAP_TWOPI(%) = %", X*I, ANGLE_WRAP_PI(X*I)
END FOR						

X=45
FORMAT ""
FOR	I=-8 TO 8				
	FORMAT "ANGLE_WRAP_180(%) = %", X*I, ANGLE_WRAP_180(X*I)
END FOR						

FORMAT ""
FOR	I=-8 TO 8				
	FORMAT "ANGLE_WRAP_360(%) = %", X*I, ANGLE_WRAP_360(X*I)
END FOR						

FORMAT ""
FOR	I=-8 TO 8				
	FORMAT "ANGLE_DIFF_180(%, %) = %", X*(I-1), X*I, ANGLE_DIFF_180(X*(I-1), X*I)
END FOR						

FORMAT	"DONE."
